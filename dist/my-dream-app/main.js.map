{"version":3,"sources":["./src/app/git-call/git-call.component.ts","./src/app/git-call/git-call.component.html","./src/app/contact-form/contact-form.component.ts","./src/app/contact-form/contact-form.component.html","./src/environments/environment.ts","./src/app/mock-categories.ts","./src/app/git-users.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cv-main/cv-main.component.ts","./src/app/cv-main/cv-main.component.html","./src/app/category.service.ts","./src/app/category-details/category-details.component.ts","./src/app/category-details/category-details.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { GitUserService } from '../git-users.service';\n\n@Component({\n  selector: 'app-git-call',\n  templateUrl: './git-call.component.html',\n  styleUrls: ['./git-call.component.scss'],\n})\nexport class GitCallComponent implements OnInit {\n  constructor(private gitUserService: GitUserService) {}\n  @Input() user: string[];\n  getUsers(): void {\n    this.gitUserService.getData().subscribe((data) => {\n      this.user = data;\n    });\n  }\n  ngOnInit(): void {\n    this.getUsers();\n  }\n}\n","<div class=\"container-fluid mt-4\">\n    <div *ngIf='user' class=\"avatar row\">\n        <p class=\"col-md-4\">\n            <img class=\"img-fluid\" src={{user.avatar_url}} alt=\"{{user.login}}\" srcset=\"\">\n        </p>\n        <div class=\"col-md-8\">\n            <p class=\"user-name\">{{user.name}}</p>\n            <p class=\"user-role\">{{user.company}}</p>\n            <p class=\"user-bio\">{{user.bio}}</p>\n            <p><a class=\"\" target=\"_blank\" href={{user.blog}}>LinkedIN</a></p>\n            <p><a href={{user.html_url}} target=\"_blank\">My GitHub</a></p>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.scss'],\n})\nexport class ContactFormComponent implements OnInit {\n  constructor() {}\n  ngOnInit(): void {}\n}\n","<form class=\"needs-validation\" novalidate>\n    <div class=\"form-row\">\n        <div class=\"col-md-6 mb-3\">\n            <label for=\"validationCustom01\">Name</label>\n            <input type=\"text\" class=\"form-control\" id=\"validationCustom01\" value=\"\" required>\n            <div class=\"valid-feedback\">\n                Looks good!\n            </div>\n        </div>\n        <div class=\"col-md-6 mb-3\">\n            <label for=\"validationCustom02\">Email</label>\n            <input type=\"email\" class=\"form-control\" id=\"validationCustom02\" value=\"\" required>\n            <div class=\"valid-feedback\">\n                Looks good!\n            </div>\n        </div>\n    </div>\n    <div class=\"form-row\">\n        <div class=\"col-md-6 mb-3\">\n            <label for=\"validationCustom03\">Message</label>\n            <textarea class=\"form-control\" name=\"\" id=\"\" cols=\"30\" rows=\"10\"></textarea>\n        </div>\n    </div>\n    <button class=\"btn btn-primary\" type=\"submit\">Submit form</button>\n</form>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Category } from './category';\n\nexport const Categories: Category[] = [\n  {\n    id: 1,\n    name: 'Education',\n    details:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus voluptas, ad dolor temporibus, beatae placeat corporis ullam ipsum maxime laudantium odit modi voluptatum impedit necessitatibus provident repellat. Atque, aliquam quisquam.',\n  },\n  {\n    id: 2,\n    name: 'Interests',\n    details:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus voluptas, ad dolor temporibus, beatae placeat corporis ullam ipsum maxime laudantium odit modi voluptatum impedit necessitatibus provident repellat.',\n  },\n  {\n    id: 3,\n    name: 'Skills',\n    details:\n      'Ipsum dolor sit amet consectetur adipisicing elit. Accusamus voluptas, ad dolor temporibus, beatae placeat corporis ullam ipsum maxime laudantium odit modi voluptatum impedit necessitatibus',\n  },\n  {\n    id: 4,\n    name: 'Language',\n    details:\n      'Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus voluptas, ad dolor temporibus, beatae placeat corporis ullam ipsum maxime laudantium odit modi voluptatum impedit necessitatibus provident repellat. Atque, aliquam quisquam.',\n  },\n  {\n    id: 5,\n    name: 'Work History',\n    details:\n      'Dolor sit amet consectetur adipisicing elit. Accusamus voluptas, ad dolor temporibus, beatae placeat corporis ullam ipsum maxime laudantium odit modi voluptatum impedit necessitatibus provident repellat. Atque, aliquam quisquam.',\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GitUserService {\n  constructor(private http: HttpClient) {}\n  getData(): Observable<any> {\n    const url = ' https://api.github.com/users/SerhiiYaroshenko1986';\n    return this.http.get<any>(url);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'my-first-angular-app';\n  isInfo = true;\n  isContact = false;\n  select(e): void {\n    if (e.currentTarget.id === 'info') {\n      this.isContact = false;\n      this.isInfo = true;\n    }\n    if (e.currentTarget.id === 'contact') {\n      this.isContact = true;\n      this.isInfo = false;\n    }\n  }\n}\n","<div class=\"cv container-fluid\">\n    <nav class=\"nav\">\n        <p class=\"text-center\">\n            <a (click)=\"select($event)\" id=\"info\" [class.active-rout]=\"isInfo\" class=\"info-link\" routerLink=\"/info\">Info</a\n      >\n    </p>\n    <p class=\"text-center\">\n      <a\n        (click)=\"select($event)\"\n        id=\"contact\"\n        [class.active-rout]=\"isContact\"\n        class=\"contact-link\"\n        routerLink=\"/contact\"\n        >Contact Me</a\n      >\n    </p>\n  </nav>\n  <app-git-call></app-git-call>\n  <div class=\"container mt-3\"></div>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CvMainComponent } from './cv-main/cv-main.component';\nimport { CategoryDetailsComponent } from './category-details/category-details.component';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\nimport { GitCallComponent } from './git-call/git-call.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CvMainComponent,\n    CategoryDetailsComponent,\n    ContactFormComponent,\n    GitCallComponent,\n  ],\n  imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Category } from '../category';\nimport { CategoryService } from '../category.service';\n\n@Component({\n  selector: 'app-cv-main',\n  templateUrl: './cv-main.component.html',\n  styleUrls: ['./cv-main.component.scss'],\n})\nexport class CvMainComponent implements OnInit {\n  categories: Category[];\n  constructor(private categoryService: CategoryService) {}\n  getCategories(): void {\n    this.categoryService\n      .getCategories()\n      .subscribe((categories) => (this.categories = categories));\n  }\n  ngOnInit(): void {\n    this.getCategories();\n  }\n  selectedCategory: Category;\n  onSelect(category: Category): void {\n    this.selectedCategory = category;\n  }\n}\n","<div class=\"row mt-4 ml-1\">\n    <div class=\"col-md-4\">\n        <ul class=\"categories list-group text-center\">\n            <li class=\"list-group-item\" *ngFor=\"let category of categories\" (click)=\"onSelect(category)\" [class.active]=\"category === selectedCategory\">\n                {{category.name}}\n            </li>\n        </ul>\n    </div>\n    <div class=\"result col-md-8\">\n        <app-category-details [category]=\"selectedCategory\"></app-category-details>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport { Category } from './category';\nimport { Categories } from './mock-categories';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor() {}\n  getCategories(): Observable<Category[]> {\n    return of(Categories);\n  }\n  getCategory(id: number): Observable<Category> {\n    return of(Categories.find((category) => category.id === id));\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Category } from '../category';\n\n@Component({\n  selector: 'app-category-details',\n  templateUrl: './category-details.component.html',\n  styleUrls: ['./category-details.component.scss'],\n})\nexport class CategoryDetailsComponent implements OnInit {\n  @Input() category: Category;\n  constructor() {}\n  ngOnInit(): void {}\n}\n","<div *ngIf=\"category\">\n    <h2>{{ category.name | uppercase }}</h2>\n    <p class=\"category-details\">Details</p>\n    <div>\n        <p class=\"category-text\">{{ category.details }}</p>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CvMainComponent } from './cv-main/cv-main.component';\nimport { ContactFormComponent } from './contact-form/contact-form.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/info', pathMatch: 'full' },\n  { path: 'info', component: CvMainComponent },\n  { path: 'contact', component: ContactFormComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}